@using NetVulkanoPruebasAutomatizadas_Front.Models
@model NetVulkanoPruebasAutomatizadas_Front.Models.AppVersion

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ReturnMessage response = new ReturnMessage();
    var aplicaciones = (IEnumerable<SelectListItem>)ViewData["aplicaciones"];
    if (ViewData["responseMessage"] != null)
    {
        response = (ReturnMessage)ViewData["responseMessage"];
    }
}

<h2>Create</h2>
@if (response != null && !string.IsNullOrEmpty(response.Mensaje))
{
    if (response.TipoMensaje == TipoMensaje.Correcto)
    {
        <div class="alert alert-success">@response.Mensaje</div>
    }
    else
    {
        <div class="alert alert-danger">@response.Mensaje</div>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>AppVersion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Aplicacion_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.Aplicacion_id, (aplicaciones), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ruta_Aplicacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ruta_Aplicacion, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Create")
</div>

@if (response != null)
{
    <script>
            function Response() {
                alert("@response.Mensaje");
        }
    </script>
}


<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Detalles de la prueba</h4>
            </div>
            <div class="modal-body">
                <p>Some text in the modal.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>